/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Funciones.Secuencial;
import DaoImp.PacientesDaoImp;
import POJO.Pacientes;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import Util.RandomConnection;

/**
 *
 * @author Reymundo Tenorio
 */
public class NuevoExpediente extends javax.swing.JInternalFrame {

    /**
     * Creates new form NuevoExpediente
     */
    public NuevoExpediente() {
        initComponents();
        btnnew.setToolTipText("Nuevo Expendiente");
        btnsave.setToolTipText("Guardar Expendiente");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtexpe = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtdate = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtdoctor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtdiagn = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtrecet = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtrecomend = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nuevo Expediente");
        setAutoscrolls(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(20, 0));

        btnnew.setText("Nuevo Expediente");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        jPanel2.add(btnnew);

        btnsave.setText("Guardar");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel4.setAutoscrolls(true);
        jPanel4.setLayout(new java.awt.GridLayout(7, 0, -200, 5));

        jLabel1.setText("Nombres del Paciente");
        jPanel4.add(jLabel1);

        jComboBox1.setEnabled(false);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jPanel4.add(jComboBox1);

        jLabel7.setText("Expediente");
        jPanel4.add(jLabel7);

        txtexpe.setEditable(false);
        txtexpe.setEnabled(false);
        jPanel4.add(txtexpe);

        jLabel5.setText("Fecha");
        jLabel5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jLabel5KeyTyped(evt);
            }
        });
        jPanel4.add(jLabel5);

        txtdate.setDateFormatString("dd-MM-yyyy");
        txtdate.setEnabled(false);
        txtdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdateFocusLost(evt);
            }
        });
        txtdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdateKeyTyped(evt);
            }
        });
        jPanel4.add(txtdate);

        jLabel6.setText("Doctor");
        jPanel4.add(jLabel6);

        txtdoctor.setEnabled(false);
        txtdoctor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtdoctorFocusGained(evt);
            }
        });
        txtdoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdoctorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdoctorKeyTyped(evt);
            }
        });
        jPanel4.add(txtdoctor);

        jLabel2.setText("Diagnostico");
        jPanel4.add(jLabel2);

        txtdiagn.setEnabled(false);
        txtdiagn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdiagnKeyReleased(evt);
            }
        });
        jPanel4.add(txtdiagn);

        jLabel3.setText("Recetas");
        jPanel4.add(jLabel3);

        txtrecet.setEnabled(false);
        txtrecet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrecetKeyReleased(evt);
            }
        });
        jPanel4.add(txtrecet);

        jLabel4.setText("Recomendaciones");
        jPanel4.add(jLabel4);

        txtrecomend.setEnabled(false);
        txtrecomend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrecomendKeyReleased(evt);
            }
        });
        jPanel4.add(txtrecomend);

        jPanel1.add(jPanel4);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Expendiente"));
        jList1.setEnabled(false);
        jScrollPane2.setViewportView(jList1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 499, 482);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        
         String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();
SimpleDateFormat sdf = new SimpleDateFormat(formato);
String FechaF = String.valueOf(sdf.format(date));
        if(txtdoctor.getText().equals("")||FechaF == null){
            
            Toolkit.getDefaultToolkit().beep();
            return;
        }

//     JFileChooser ArchivEleg = new JFileChooser();
//     ArchivEleg.setFileSelectionMode(JFileChooser.FILES_ONLY);
//     int Resultado = ArchivEleg.showSaveDialog(this);
//     
//     if(Resultado==JFileChooser.CANCEL_OPTION){
//         return;
//     }
     
//     File Nombre = ArchivEleg.getSelectedFile();
      
         
        try {
            
            
            JList dataList = new JList();
            dataList = jList1;
String Expediente="";
 for(int i = 0; i < dataList.getModel().getSize(); i++) {
     
     Expediente= Expediente.concat("\n"+(String)(dataList.getModel().getElementAt(i)));
 }
 
 Expediente = Expediente.concat("\n"+"..........................................................................................");
            Secuencial.writeFile((new File("Expedientes/"+txtexpe.getText()+".txt")), Expediente);
            System.out.println("Guardado!");


         
                
                // TODO add your handling code here:
        } catch (IOException ex) {
            System.out.println("Error al Escribir Secuencial");
        }
        
        DisableAll();
    }//GEN-LAST:event_btnsaveActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
String dia, mes, ano;
//String dia1, mes1, ano1;
       
        //Calendar c1 = Calendar.getInstance();

        Calendar c = new GregorianCalendar();
//        
//        dia1 = Integer.toString(c1.get(Calendar.DATE));
//mes1 = Integer.toString(c1.get(Calendar.MONTH));
//ano1 = Integer.toString(c1.get(Calendar.YEAR));
        
        
dia = Integer.toString(c.get(Calendar.DATE));
mes = Integer.toString(c.get(Calendar.MONTH)+1);
ano = Integer.toString(c.get(Calendar.YEAR));

      //  System.out.println(dia+"/"+mes+"/"+ano);
     //   System.out.println(dia1+"/"+mes1+"/"+ano1);

//txtdate.setText(dia+"/"+mes+"/"+ano);
        
        
        try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            Logger.getLogger(NuevoExpediente.class.getName()).log(Level.SEVERE, null, ex);
        }
         
          for ( Pacientes e : cursos  ) {
        
              jComboBox1.addItem(e.getNombres());
//              
//               System.out.println("\nID: " + e.getId());
//                            System.out.println("\nNombre: " + e.getNombre());
//                            System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                            System.out.println("\nCodigo: "+e.getCodigo());
//                            System.out.println("\nFecha: " + e.getFecha());
//                            System.out.println("\nActivo "+e.isActivo());
         }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
   
          String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
            
            String FechaF="";
            
            if(txtdate.getDate()!=null){
            String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();

SimpleDateFormat sdf = new SimpleDateFormat(formato);
 FechaF = String.valueOf(sdf.format(date));
            }  
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
            modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+FechaF);
             modelo.addElement("Doctor: "+txtdoctor.getText());
            modelo.addElement("Diagnostico: "+txtdiagn.getText());
                   modelo.addElement("Recetas: "+txtrecet.getText());
            modelo.addElement("Recomendaciones: "+txtrecomend.getText());
     
         
      
         
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    
    public void EnableAll(){
        jComboBox1.setEnabled(true);
         txtexpe.setEnabled(true);
        txtdate.setEnabled(true);
        txtdoctor.setEnabled(true);
        txtdiagn.setEnabled(true);
       
        txtrecet.setEnabled(true);
        txtrecomend.setEnabled(true);
    }
    
    public void DisableAll(){
         jComboBox1.setEnabled(false);
        txtdate.setEnabled(false);
        txtdoctor.setEnabled(false);
        txtdiagn.setEnabled(false);
        txtexpe.setEnabled(false);
        txtrecet.setEnabled(false);
        txtrecomend.setEnabled(false);
    }
    
    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
txtdiagn.setText("");
txtdoctor.setText("");
txtrecet.setText("");
txtrecomend.setText("");
txtdate.setDate(null);




 String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
            
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
           modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+"");
             modelo.addElement("Doctor: "+"");
            modelo.addElement("Diagnostico: "+"");
                   modelo.addElement("Recetas: "+"");
            modelo.addElement("Recomendaciones: "+"");
     
            
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }  
        
        EnableAll();
// TODO add your handling code here:
    }//GEN-LAST:event_btnnewActionPerformed

    private void txtdoctorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdoctorKeyReleased
 String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
           String FechaF="";
            
            if(txtdate.getDate()!=null){
            String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();

SimpleDateFormat sdf = new SimpleDateFormat(formato);
 FechaF = String.valueOf(sdf.format(date));
            }  

            
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
            modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+FechaF);
             modelo.addElement("Doctor: "+txtdoctor.getText());
            modelo.addElement("Diagnostico: "+txtdiagn.getText());
                   modelo.addElement("Recetas: "+txtrecet.getText());
            modelo.addElement("Recomendaciones: "+txtrecomend.getText());
     
            
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }               // TODO add your handling code here:
    }//GEN-LAST:event_txtdoctorKeyReleased

    private void txtdiagnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdiagnKeyReleased
 String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
        String FechaF="";
            
            if(txtdate.getDate()!=null){
            String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();

SimpleDateFormat sdf = new SimpleDateFormat(formato);
 FechaF = String.valueOf(sdf.format(date));
            }  

            
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
            modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+FechaF);
             modelo.addElement("Doctor: "+txtdoctor.getText());
            modelo.addElement("Diagnostico: "+txtdiagn.getText());
                   modelo.addElement("Recetas: "+txtrecet.getText());
            modelo.addElement("Recomendaciones: "+txtrecomend.getText());
     
            
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtdiagnKeyReleased

    private void txtrecetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrecetKeyReleased
 String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
             String FechaF="";
            
            if(txtdate.getDate()!=null){
            String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();

SimpleDateFormat sdf = new SimpleDateFormat(formato);
 FechaF = String.valueOf(sdf.format(date));
            }  

            
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
            modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+FechaF);
             modelo.addElement("Doctor: "+txtdoctor.getText());
            modelo.addElement("Diagnostico: "+txtdiagn.getText());
                   modelo.addElement("Recetas: "+txtrecet.getText());
            modelo.addElement("Recomendaciones: "+txtrecomend.getText());
     
            
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtrecetKeyReleased

    private void txtrecomendKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrecomendKeyReleased
 String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
       String FechaF="";
            
            if(txtdate.getDate()!=null){
            String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();

SimpleDateFormat sdf = new SimpleDateFormat(formato);
 FechaF = String.valueOf(sdf.format(date));
            }  

            
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
            modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+FechaF);
             modelo.addElement("Doctor: "+txtdoctor.getText());
            modelo.addElement("Diagnostico: "+txtdiagn.getText());
                   modelo.addElement("Recetas: "+txtrecet.getText());
            modelo.addElement("Recomendaciones: "+txtrecomend.getText());
     
            
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtrecomendKeyReleased

    private void txtdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdateFocusLost
//try {
//String formato = txtdate.getDateFormatString();
//Date date = txtdate.getDate();
//SimpleDateFormat sdf = new SimpleDateFormat(formato);
//
//} catch (Exception e) {
//JOptionPane.showMessageDialog(null, "Escriba Una Fecha Valida", "Error..!!", JOptionPane.ERROR_MESSAGE);

//    }       
       
        

   // System.out.println("fecha "+txtdate.toString());    
        
        
        String NombreExp = "";
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
            System.out.println("Archivo No Encontrado");
        } catch (IOException ex) {
            System.out.println("Error al Conectar");
        }
        
         PacientesDaoImp cdi = new PacientesDaoImp();
        
         List<Pacientes> cursos = null;
        try {
            cursos = cdi.EncontrarTodos();
        } catch (IOException ex) {
            System.out.println("Error Al Encontrar Todos");
        }
        
        
        try {
            if(cdi.Raf()==0){
                System.out.println("No hay registros");
                return;
            }
            
            else{
             
                
                Pacientes e = null;
       
                int x=0;
                
             
                
                try{
                    
                String Nombre = (String) jComboBox1.getSelectedItem();
                e = cdi.BuscarPorNombres(Nombre);
           
                }catch(java.io.EOFException n){
                    System.out.println("No Encontrado, raf :"+cdi.Raf());
                    x=1;
                }
                
                if(x!=1){
                    
                if(e.getNombres()==null){
                    System.out.println("no encontrado");
                    
                }
                
                
                else{
                    
                    
                   StringTokenizer Exp = new StringTokenizer(e.getCedula(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                    System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);
                    
//                    System.out.println("\nID: " + e.getId());
//                                System.out.println("\nNombre: " + e.getNombre());
//                                System.out.println("\nAcuerdo: "+e.getAcuerdo());
//                                System.out.println("\nCodigo: "+e.getCodigo());
//                                System.out.println("\nFecha: " + e.getFecha());
//                                System.out.println("\nActivo "+e.isActivo());
                }
                
                }
                
            }
            
       String FechaF="";
            
            if(txtdate.getDate()!=null){
            String formato = txtdate.getDateFormatString();
Date date = txtdate.getDate();

SimpleDateFormat sdf = new SimpleDateFormat(formato);
 FechaF = String.valueOf(sdf.format(date));
            }  

            
              DefaultListModel modelo = new DefaultListModel();
            jList1.setModel(modelo);
            modelo.addElement("Nombres Del Paciente: "+jComboBox1.getSelectedItem());
               modelo.addElement("Expediente: "+txtexpe.getText());
                  modelo.addElement("Fecha: "+FechaF);
             modelo.addElement("Doctor: "+txtdoctor.getText());
            modelo.addElement("Diagnostico: "+txtdiagn.getText());
                   modelo.addElement("Recetas: "+txtrecet.getText());
            modelo.addElement("Recomendaciones: "+txtrecomend.getText());
     
            
            
        } catch (IOException ex) {
            System.out.println("Aqui!");
        }        // TODO add your handling code here:
    
        
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdateFocusLost

    private void txtdoctorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdoctorFocusGained
 
             // TODO add your handling code here:
    }//GEN-LAST:event_txtdoctorFocusGained

    private void jLabel5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel5KeyTyped
          // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5KeyTyped

    private void txtdoctorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdoctorKeyTyped
char a = evt.getKeyChar();

if(!Character.isLetter(a)&&!Character.isISOControl(a)&&a!=' '){
    
    Toolkit.getDefaultToolkit().beep();
    evt.consume();
}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdoctorKeyTyped

    private void txtdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdateKeyTyped
        Toolkit.getDefaultToolkit().beep();
        evt.consume();      // TODO add your handling code here:
    }//GEN-LAST:event_txtdateKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser txtdate;
    private javax.swing.JTextField txtdiagn;
    private javax.swing.JTextField txtdoctor;
    private javax.swing.JTextField txtexpe;
    private javax.swing.JTextField txtrecet;
    private javax.swing.JTextField txtrecomend;
    // End of variables declaration//GEN-END:variables
}
