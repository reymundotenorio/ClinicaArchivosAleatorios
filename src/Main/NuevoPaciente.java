package Main;

import Funciones.ComparandoFechas;
import DaoImp.PacientesDaoImp;
import POJO.Pacientes;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.commons.lang3.text.WordUtils;
import Util.RandomConnection;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Reymundo Tenorio
 */
public class NuevoPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form NuevoPaciente
     */
    public NuevoPaciente() {
        initComponents();
        btnnew.setToolTipText("Nuevo Paciente");
        btnsave.setToolTipText("Guardar Paciente");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtcedul = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtnombres = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtapelli = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtedad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtocu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtdirecc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txttel = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtexpe = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Nuevo Paciente");
        setAutoscrolls(true);

        jPanel1.setLayout(new java.awt.GridLayout(9, 2));

        jLabel1.setText("No. Cedula");
        jPanel1.add(jLabel1);

        try {
            txtcedul.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-######-####U")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtcedul.setEnabled(false);
        txtcedul.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcedulFocusLost(evt);
            }
        });
        txtcedul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcedulKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedulKeyTyped(evt);
            }
        });
        jPanel1.add(txtcedul);

        jLabel2.setText("Nombres");
        jPanel1.add(jLabel2);

        txtnombres.setEnabled(false);
        txtnombres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtnombresFocusLost(evt);
            }
        });
        txtnombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombresKeyTyped(evt);
            }
        });
        jPanel1.add(txtnombres);

        jLabel3.setText("Apellidos");
        jPanel1.add(jLabel3);

        txtapelli.setEnabled(false);
        txtapelli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapelliActionPerformed(evt);
            }
        });
        txtapelli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtapelliKeyTyped(evt);
            }
        });
        jPanel1.add(txtapelli);

        jLabel4.setText("Edad");
        jPanel1.add(jLabel4);

        txtedad.setEditable(false);
        txtedad.setEnabled(false);
        txtedad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtedadKeyTyped(evt);
            }
        });
        jPanel1.add(txtedad);

        jLabel5.setText("Ocupacion");
        jPanel1.add(jLabel5);

        txtocu.setEnabled(false);
        txtocu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtocuKeyTyped(evt);
            }
        });
        jPanel1.add(txtocu);

        jLabel6.setText("Direccion");
        jPanel1.add(jLabel6);

        txtdirecc.setEnabled(false);
        txtdirecc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdireccKeyTyped(evt);
            }
        });
        jPanel1.add(txtdirecc);

        jLabel7.setText("Telefono");
        jPanel1.add(jLabel7);

        try {
            txttel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txttel.setEnabled(false);
        jPanel1.add(txttel);

        jLabel8.setText("Expediente");
        jPanel1.add(jLabel8);

        txtexpe.setEditable(false);
        txtexpe.setEnabled(false);
        jPanel1.add(txtexpe);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        btnnew.setText("Nuevo");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        jPanel2.add(btnnew);

        btnsave.setText("Guardar");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        setBounds(0, 0, 463, 374);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
 int ID = 0;
        String cedula, nombres, apellidos, ocupacion, direccion, telefonos, expediente;
        int edad = 0;
       
        
        cedula = txtcedul.getText();
        nombres = txtnombres.getText();
        apellidos = txtapelli.getText();
        ocupacion = txtocu.getText();
        direccion = txtdirecc.getText();
        telefonos = txttel.getText();
        expediente= txtexpe.getText();
        
       // System.out.println("edad "+txtedad.getText());
        if(!"".equals(txtedad.getText())){
        edad = Integer.parseInt(txtedad.getText());
        }      
//        System.out.print(
//        cedula
//        +nombres 
//        +apellidos 
//        +ocupacion 
//        +direccion
//        +telefonos 
//        +expediente 
//        +edad );
        
        if(!"".equals(cedula)&&!"".equals(nombres)&&!"".equals(apellidos)&&!"".equals(ocupacion)&&!"".equals(direccion)&&!"".equals(telefonos)&&!"".equals(expediente)&&edad!=0){
        
         try {
            new RandomConnection(("Pacientes.dat")).Conectar();
        } catch (FileNotFoundException ex) {
             JOptionPane.showMessageDialog(this, "Archivo No Encontrado", "Archivo No Encontrado", JOptionPane.ERROR_MESSAGE);
           
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al Conectar", "Error al Conectar", JOptionPane.ERROR_MESSAGE);
           
     
        }
          
        
           PacientesDaoImp cdi = new PacientesDaoImp();
        try {
            ID = cdi.Raf()+1;
        } catch (IOException ex) {
            Logger.getLogger(NuevoPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        System.out.println("Ingrese Nombre: ");
//        Nombre = Leer.Dato();
//        
//        System.out.println("Ingrese Acuerdo: ");
//        Acuerdo = Leer.Dato();
//        
//        System.out.println("Ingrese Codigo: ");
//        Codigo = Leer.Dato();
//        
//        System.out.println("Ingrese Fecha: ");
//        Fecha = Leer.Dato();
//        
//        System.out.println("Activo = False");
//        Activo = false;
        
        Pacientes cr = new Pacientes();
        
        cr.setId(ID);
        cr.setCedula(cedula);
        cr.setNombres(nombres);
        cr.setApellidos(apellidos);
        cr.setEdad(edad);
        cr.setOcupacion(ocupacion);
        cr.setDireccion(direccion);
        cr.setTelefonos(telefonos);
        cr.setExpediente(expediente);
       
        try {
            cdi.Guardar(cr);
            JOptionPane.showMessageDialog(this, "Guardado Con Exito", "Guardado Con Exito", JOptionPane.INFORMATION_MESSAGE);
           
     
        } catch (IOException ex) {
       JOptionPane.showMessageDialog(this, "Error Al Guardar", "Error Al Guardar", JOptionPane.ERROR_MESSAGE);
           
        }
           
       this.btnnewActionPerformed(evt);
       
       DisableAll();
        }            // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveActionPerformed

    
    public void EnableAll(){
    txtcedul.setEnabled(true);
  txtnombres.setEnabled(true);;
 txtapelli.setEnabled(true);
     txtocu.setEnabled(true);
      txtdirecc.setEnabled(true);
    txttel.setEnabled(true);
 txtexpe.setEnabled(true);
txtedad.setEnabled(true);;
        
}

public void DisableAll(){
    
    
    txtcedul.setEnabled(false);
  txtnombres.setEnabled(false);
 txtapelli.setEnabled(false);
     txtocu.setEnabled(false);
      txtdirecc.setEnabled(false);
    txttel.setEnabled(false);
 txtexpe.setEnabled(false);
txtedad.setEnabled(false);
        
}
    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed

       EnableAll();
        
        
        
        txtcedul.setText("");
  txtnombres.setText("");
 txtapelli.setText("");
     txtocu.setText("");
      txtdirecc.setText("");
    txttel.setText("");
 txtexpe.setText("");
txtedad.setText("");
                
          // TODO add your handling code here:
    }//GEN-LAST:event_btnnewActionPerformed

    private void txtcedulKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulKeyReleased
 
        String NombreExp = "";
                   StringTokenizer Exp = new StringTokenizer(txtcedul.getText(), "-");
                   while(Exp.hasMoreTokens()){
                       NombreExp=NombreExp.concat(Exp.nextToken());
                   }
                  //  System.out.println("tokennn "+NombreExp);
                    
                    txtexpe.setText(NombreExp);        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulKeyReleased

//    public static String capitalize(String s) {
//        if (s.length() == 0) return s;
//        return s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase();
//    }

    
    /***
     * Convierte la Primera Letra de Cada Palabra de la Oracion a Mayuscula y las restantes en Minúsculas
     * @param oracion
     * @return String: Oracion Capitalizada
     * @author cgarcia
     */
    public String capitalizarTexto(String textoSinFormato){
        String []palabras = textoSinFormato.split("\\s+");
        StringBuilder textoFormateado = new StringBuilder();
        
        for(String palabra : palabras){
            textoFormateado.append(palabra.substring(0,1).toUpperCase()
        	    	.concat( palabra.substring(1,palabra.length())
        		.toLowerCase()).concat(" "));
        }
        
        return textoFormateado.toString();        
    }
    
    private void txtnombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombresKeyTyped

         txtnombres.setText(WordUtils.capitalizeFully(txtnombres.getText()));
        
//        char[] caracteres = txtnombres.getText().toCharArray();
//        caracteres[0] = Character.toUpperCase(caracteres[0]);
        
char cha = evt.getKeyChar();


        if(!Character.isLetter(cha)&&!Character.isISOControl(cha)&&cha!=' '){
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            
        } else{
       
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombresKeyTyped

    private void txtapelliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtapelliKeyTyped

             txtapelli.setText(WordUtils.capitalizeFully(txtapelli.getText()));
        char cha = evt.getKeyChar();
        if(!Character.isLetter(cha)&&!Character.isISOControl(cha)&&cha!=' '){
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            
        }           // TODO add your handling code here:
    }//GEN-LAST:event_txtapelliKeyTyped

    private void txtocuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtocuKeyTyped
char cha = evt.getKeyChar();
        if(!Character.isLetter(cha)&&!Character.isISOControl(cha)&&cha!=' '){
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            
        }           // TODO add your handling code here:
    }//GEN-LAST:event_txtocuKeyTyped

    private void txtedadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtedadKeyTyped
char cha = evt.getKeyChar();
        if(!Character.isDigit(cha)&&!Character.isISOControl(cha)){
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            
        }           // TODO add your handling code here:
    }//GEN-LAST:event_txtedadKeyTyped

    private void txtcedulKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulKeyTyped


// TODO add your handling code here:
    }//GEN-LAST:event_txtcedulKeyTyped

    private void txtcedulFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcedulFocusLost
String dia, mes, ano, cedula;
String ano1;
int mes1;
cedula = txtcedul.getText();

//if(Integer.parseInt(cedula.substring(4, 5))>3){
//    Toolkit.getDefaultToolkit().beep();
//    evt.consume();
//}
//
//if(Integer.parseInt(cedula.substring(5,6))>1&&Integer.parseInt(cedula.substring(4, 5))==3){
//    Toolkit.getDefaultToolkit().beep();
//    evt.consume();
//
//}



dia = cedula.substring(4, 6);
mes = cedula.substring(6, 8);
ano = cedula.substring(8,10);

     //   System.out.println("diaaa "+dia);
   //     System.out.println("tamano "+dia.length());

// if(!"  ".equals(dia)&&!"  ".equals(mes)&&!"  ".equals(ano)){
     
//mes1=Integer.parseInt(mes)-1;
ano1 = "19".concat(ano);


  //      System.out.println("fecha "+fecha);

ComparandoFechas f = new ComparandoFechas();
//int edad= f.calcularEdad(fecha);
     //   System.out.println("edad "+edad);

      
if(!"   -      -     ".equals(cedula)){
    
   String fecha = dia+"-"+mes+"-"+ano1;
int edad = CalcularEdad1(fecha);
  //  System.out.println("edadd "+edad);
    txtedad.setText(String.valueOf(edad));
    
} // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulFocusLost

    private void txtnombresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnombresFocusLost

        
     //    txtnombres.setText(capitalizarTexto(txtnombres.getText()));
//        WorldUtils
        
        //        if(!"".equals(txtnombres.getText())){
//         String line = txtnombres.getText();
//            String[] words = line.split("\\s");
//            for (String s : words) {
//               txtnombres.setText(capitalize(s) + " ");
//            }
//    }
//        
       // txtnombres.setText(txtnombres.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombresFocusLost

    private void txtapelliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapelliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtapelliActionPerformed

    private void txtdireccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdireccKeyTyped
     txtdirecc.setText(WordUtils.capitalizeFully(txtdirecc.getText()));        // TODO add your handling code here:
    }//GEN-LAST:event_txtdireccKeyTyped

    public  int CalcularEdad1(String fecha){
	    Date fechaNac=null;
	        try {
	            /*Se puede cambiar la mascara por el formato de la fecha que se
	            //quiera recibir, por ejemplo año mes día "yyyy-MM-dd"
	            en este caso es día mes año*/
	            fechaNac = new SimpleDateFormat("dd-MM-yyyy").parse(fecha);
	        } catch (Exception ex) {
                    
                    JOptionPane.showMessageDialog(this, "Error Al Calcular Edad", "Error Al Calcular Edad", JOptionPane.ERROR_MESSAGE);
           
	          //  System.out.println("Error:"+ex);
	        }
	        Calendar fechaNacimiento = Calendar.getInstance();
	        //Se crea un objeto con la fecha actual
	        Calendar fechaActual = Calendar.getInstance();	
                //Se asigna la fecha recibida a la fecha de nacimiento.
	        fechaNacimiento.setTime(fechaNac);
	        //Se restan la fecha actual y la fecha de nacimiento
	        int año = fechaActual.get(Calendar.YEAR)- fechaNacimiento.get(Calendar.YEAR);
	        int mes =fechaActual.get(Calendar.MONTH)- fechaNacimiento.get(Calendar.MONTH);
	        int dia = fechaActual.get(Calendar.DATE)- fechaNacimiento.get(Calendar.DATE);
	        //Se ajusta el año dependiendo el mes y el día
	        if(mes<0 || (mes==0 && dia<0)){
	            año--;
	        }
	        //Regresa la edad en base a la fecha de nacimiento
	        return año;
	    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtapelli;
    private javax.swing.JFormattedTextField txtcedul;
    private javax.swing.JTextField txtdirecc;
    private javax.swing.JTextField txtedad;
    private javax.swing.JTextField txtexpe;
    private javax.swing.JTextField txtnombres;
    private javax.swing.JTextField txtocu;
    private javax.swing.JFormattedTextField txttel;
    // End of variables declaration//GEN-END:variables
}
